import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;

class Main {
    static int[][] dp = new int[41][2]; // 메모이제이션을 위한 배열

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine()); // 테스트 케이스의 개수

        // dp 배열 초기화
        dp[0][0] = 1; dp[0][1] = 0; // fibonacci(0)은 0을 1번, 1을 0번 반환
        dp[1][0] = 0; dp[1][1] = 1; // fibonacci(1)은 0을 0번, 1을 1번 반환

        // fibonacci(2)부터 fibonacci(40)까지 계산
        for (int i = 2; i <= 40; i++) {
            dp[i][0] = dp[i-1][0] + dp[i-2][0]; // 0 반환 횟수
            dp[i][1] = dp[i-1][1] + dp[i-2][1]; // 1 반환 횟수
        }

        StringBuilder sb = new StringBuilder();
        while (T-- > 0) {
            int N = Integer.parseInt(br.readLine());
            sb.append(dp[N][0]).append(' ').append(dp[N][1]).append('\n');
        }
        System.out.println(sb.toString());
    }
}
